token literal names:
null
null
null
null
'var'
null
null
null
'display'
'return'
'if'
'then'
'and'
'or'
'in'
'else'
null
'while'
'for'
'true'
'false'
null
'class'
'let'
'bind'
'trait'
'def'
'protocol'
'enum'
'import'
'from'
'package'
'as'
'break'
'abstract'
'select'
'input'
'each'
'new'
'continue'
'export'
'include'
':='
'='
'=='
'!='
'<='
'>='
'+'
'-'
'*'
'/'
'<'
'>'
'!'
'^'
'%'
'|'
'||'
'#'
'&'
'&&'
null
null
null
null
','
'('
')'
'{'
null
'['
']'
'->'
':'
'.'
'...'
'++'
'--'
'float'
'string'
'bool'
'null'
'char'
null
null
null
null
null
null
'\\"'
'\\\\'
'\\n'
'\\#'
null
'#{'
null
null
null
null
null
null
null
null
null
null
null

token symbolic names:
null
ENDSTATEMENT
SEMICOLONTERMINATE
SPEECHMARKS
VAR
ARRAY
CONST
LOCAL
DISPLAY
RETURN
IF
THEN
AND
OR
IN
ELSE
ELSEIF
WHILE
FOR
TRUE
FALSE
FUNCTION
CLASS
LET
BIND
TRAIT
DEFINE
PROTOCOL
ENUM
IMPORT
FROM
PACKAGE
AS
BREAK
ABSTRACT
SELECT
INPUT
EACH
NEW
CONTINUE
EXPORT
INCLUDE
ASSIGN
EQUALS
EQEQ
NOTEQUAL
LTEQUALS
GTEQUALS
PLUS
MINUS
MULTIPLY
DIVIDE
LESSTHAN
GREATERTHAN
BANG
POWER
MODULUS
VERTICAL
ORSYMBOL
HASH
AMBERSAND
ANDSYMBOL
TYPE_INT
TYPE_DECIMAL
TYPE_STRING
TYPE_BOOLEAN
COMMA
LBRACKET
RBRACKET
LBRACE
RBRACE
LSQRBRACKET
RSQRBRACKET
ARROW
COLON
DOT
ELLIPSIS
PLUSPLUS
MINUSMINUS
FLOAT
STRING
BOOLEAN
NULL
CHAR
INT_LITERAL
FLOAT_LITERAL
COMMENT
TERMINATOR
STRING_OPEN
UNMATCHED
SCAPE_STRING_DELIMITER
ESCAPE_SLASH
ESCAPE_NEWLINE
ESCAPE_SHARP
STRING_CLOSE
INTERPOLATION_OPEN
STRING_CONTENT
INTERPOLATION_CLOSE
NOUNICODEID
IDENTIFIER
BINARY_OP
INT_LIT
FLOAT_LIT
STRING_LIT
RUNE_LIT
LITTLE_U_VALUE
BIG_U_VALUE

rule names:
jingleFile
line
statement
varDeclaration
stmtDisplay


atn:
[3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 3, 108, 37, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 3, 2, 6, 2, 14, 10, 2, 13, 2, 14, 2, 15, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 5, 4, 24, 10, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 2, 2, 7, 2, 4, 6, 8, 10, 2, 4, 3, 3, 3, 3, 4, 2, 86, 86, 100, 100, 2, 34, 2, 13, 3, 2, 2, 2, 4, 17, 3, 2, 2, 2, 6, 23, 3, 2, 2, 2, 8, 25, 3, 2, 2, 2, 10, 30, 3, 2, 2, 2, 12, 14, 5, 4, 3, 2, 13, 12, 3, 2, 2, 2, 14, 15, 3, 2, 2, 2, 15, 13, 3, 2, 2, 2, 15, 16, 3, 2, 2, 2, 16, 3, 3, 2, 2, 2, 17, 18, 5, 6, 4, 2, 18, 19, 9, 2, 2, 2, 19, 5, 3, 2, 2, 2, 20, 24, 3, 2, 2, 2, 21, 24, 5, 8, 5, 2, 22, 24, 5, 10, 6, 2, 23, 20, 3, 2, 2, 2, 23, 21, 3, 2, 2, 2, 23, 22, 3, 2, 2, 2, 24, 7, 3, 2, 2, 2, 25, 26, 7, 6, 2, 2, 26, 27, 7, 100, 2, 2, 27, 28, 7, 45, 2, 2, 28, 29, 7, 86, 2, 2, 29, 9, 3, 2, 2, 2, 30, 31, 7, 10, 2, 2, 31, 32, 7, 76, 2, 2, 32, 33, 7, 69, 2, 2, 33, 34, 9, 3, 2, 2, 34, 35, 7, 70, 2, 2, 35, 11, 3, 2, 2, 2, 4, 15, 23]