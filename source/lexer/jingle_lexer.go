// Code generated from JingleLexer.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 41, 247,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 3, 90, 10, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3,
	5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 110, 10,
	5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3,
	7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3,
	10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12,
	3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3,
	14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16,
	3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3,
	20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25,
	3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 29, 3, 29, 3, 30, 3,
	30, 3, 31, 3, 31, 3, 32, 3, 32, 3, 33, 3, 33, 3, 34, 3, 34, 3, 35, 3, 35,
	3, 35, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3,
	37, 3, 37, 3, 37, 3, 37, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39,
	3, 39, 3, 39, 3, 39, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 41, 6, 41, 239,
	10, 41, 13, 41, 14, 41, 240, 3, 41, 3, 41, 3, 41, 5, 41, 246, 10, 41, 2,
	2, 42, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21,
	11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39,
	20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57,
	29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75,
	38, 77, 39, 79, 40, 81, 41, 3, 2, 3, 3, 2, 50, 59, 2, 251, 2, 5, 3, 2,
	2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3,
	2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21,
	3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2,
	29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2,
	2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2,
	2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2,
	2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3,
	2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67,
	3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2,
	75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2,
	3, 83, 3, 2, 2, 2, 5, 89, 3, 2, 2, 2, 7, 91, 3, 2, 2, 2, 9, 109, 3, 2,
	2, 2, 11, 111, 3, 2, 2, 2, 13, 119, 3, 2, 2, 2, 15, 126, 3, 2, 2, 2, 17,
	129, 3, 2, 2, 2, 19, 134, 3, 2, 2, 2, 21, 139, 3, 2, 2, 2, 23, 143, 3,
	2, 2, 2, 25, 148, 3, 2, 2, 2, 27, 154, 3, 2, 2, 2, 29, 159, 3, 2, 2, 2,
	31, 165, 3, 2, 2, 2, 33, 169, 3, 2, 2, 2, 35, 171, 3, 2, 2, 2, 37, 173,
	3, 2, 2, 2, 39, 175, 3, 2, 2, 2, 41, 177, 3, 2, 2, 2, 43, 179, 3, 2, 2,
	2, 45, 181, 3, 2, 2, 2, 47, 183, 3, 2, 2, 2, 49, 185, 3, 2, 2, 2, 51, 188,
	3, 2, 2, 2, 53, 190, 3, 2, 2, 2, 55, 192, 3, 2, 2, 2, 57, 194, 3, 2, 2,
	2, 59, 196, 3, 2, 2, 2, 61, 198, 3, 2, 2, 2, 63, 200, 3, 2, 2, 2, 65, 202,
	3, 2, 2, 2, 67, 204, 3, 2, 2, 2, 69, 206, 3, 2, 2, 2, 71, 209, 3, 2, 2,
	2, 73, 215, 3, 2, 2, 2, 75, 222, 3, 2, 2, 2, 77, 227, 3, 2, 2, 2, 79, 232,
	3, 2, 2, 2, 81, 245, 3, 2, 2, 2, 83, 84, 9, 2, 2, 2, 84, 4, 3, 2, 2, 2,
	85, 90, 7, 37, 2, 2, 86, 90, 11, 2, 2, 2, 87, 88, 7, 49, 2, 2, 88, 90,
	7, 49, 2, 2, 89, 85, 3, 2, 2, 2, 89, 86, 3, 2, 2, 2, 89, 87, 3, 2, 2, 2,
	90, 6, 3, 2, 2, 2, 91, 92, 7, 120, 2, 2, 92, 93, 7, 99, 2, 2, 93, 94, 7,
	116, 2, 2, 94, 8, 3, 2, 2, 2, 95, 96, 7, 101, 2, 2, 96, 97, 7, 113, 2,
	2, 97, 98, 7, 112, 2, 2, 98, 99, 7, 117, 2, 2, 99, 110, 7, 118, 2, 2, 100,
	110, 11, 2, 2, 2, 101, 102, 7, 101, 2, 2, 102, 103, 7, 113, 2, 2, 103,
	104, 7, 112, 2, 2, 104, 105, 7, 117, 2, 2, 105, 106, 7, 118, 2, 2, 106,
	107, 7, 99, 2, 2, 107, 108, 7, 112, 2, 2, 108, 110, 7, 118, 2, 2, 109,
	95, 3, 2, 2, 2, 109, 100, 3, 2, 2, 2, 109, 101, 3, 2, 2, 2, 110, 10, 3,
	2, 2, 2, 111, 112, 7, 102, 2, 2, 112, 113, 7, 107, 2, 2, 113, 114, 7, 117,
	2, 2, 114, 115, 7, 114, 2, 2, 115, 116, 7, 110, 2, 2, 116, 117, 7, 99,
	2, 2, 117, 118, 7, 123, 2, 2, 118, 12, 3, 2, 2, 2, 119, 120, 7, 116, 2,
	2, 120, 121, 7, 103, 2, 2, 121, 122, 7, 118, 2, 2, 122, 123, 7, 119, 2,
	2, 123, 124, 7, 116, 2, 2, 124, 125, 7, 112, 2, 2, 125, 14, 3, 2, 2, 2,
	126, 127, 7, 107, 2, 2, 127, 128, 7, 104, 2, 2, 128, 16, 3, 2, 2, 2, 129,
	130, 7, 103, 2, 2, 130, 131, 7, 110, 2, 2, 131, 132, 7, 117, 2, 2, 132,
	133, 7, 103, 2, 2, 133, 18, 3, 2, 2, 2, 134, 135, 7, 103, 2, 2, 135, 136,
	7, 110, 2, 2, 136, 137, 7, 107, 2, 2, 137, 138, 7, 104, 2, 2, 138, 20,
	3, 2, 2, 2, 139, 140, 7, 104, 2, 2, 140, 141, 7, 113, 2, 2, 141, 142, 7,
	116, 2, 2, 142, 22, 3, 2, 2, 2, 143, 144, 7, 118, 2, 2, 144, 145, 7, 116,
	2, 2, 145, 146, 7, 119, 2, 2, 146, 147, 7, 103, 2, 2, 147, 24, 3, 2, 2,
	2, 148, 149, 7, 104, 2, 2, 149, 150, 7, 99, 2, 2, 150, 151, 7, 110, 2,
	2, 151, 152, 7, 117, 2, 2, 152, 153, 7, 103, 2, 2, 153, 26, 3, 2, 2, 2,
	154, 155, 7, 104, 2, 2, 155, 156, 7, 119, 2, 2, 156, 157, 7, 112, 2, 2,
	157, 158, 7, 101, 2, 2, 158, 28, 3, 2, 2, 2, 159, 160, 7, 101, 2, 2, 160,
	161, 7, 110, 2, 2, 161, 162, 7, 99, 2, 2, 162, 163, 7, 117, 2, 2, 163,
	164, 7, 117, 2, 2, 164, 30, 3, 2, 2, 2, 165, 166, 7, 110, 2, 2, 166, 167,
	7, 103, 2, 2, 167, 168, 7, 118, 2, 2, 168, 32, 3, 2, 2, 2, 169, 170, 7,
	60, 2, 2, 170, 34, 3, 2, 2, 2, 171, 172, 7, 63, 2, 2, 172, 36, 3, 2, 2,
	2, 173, 174, 7, 45, 2, 2, 174, 38, 3, 2, 2, 2, 175, 176, 7, 47, 2, 2, 176,
	40, 3, 2, 2, 2, 177, 178, 7, 44, 2, 2, 178, 42, 3, 2, 2, 2, 179, 180, 7,
	49, 2, 2, 180, 44, 3, 2, 2, 2, 181, 182, 7, 62, 2, 2, 182, 46, 3, 2, 2,
	2, 183, 184, 7, 64, 2, 2, 184, 48, 3, 2, 2, 2, 185, 186, 7, 35, 2, 2, 186,
	187, 7, 63, 2, 2, 187, 50, 3, 2, 2, 2, 188, 189, 7, 35, 2, 2, 189, 52,
	3, 2, 2, 2, 190, 191, 7, 46, 2, 2, 191, 54, 3, 2, 2, 2, 192, 193, 7, 61,
	2, 2, 193, 56, 3, 2, 2, 2, 194, 195, 7, 42, 2, 2, 195, 58, 3, 2, 2, 2,
	196, 197, 7, 43, 2, 2, 197, 60, 3, 2, 2, 2, 198, 199, 7, 125, 2, 2, 199,
	62, 3, 2, 2, 2, 200, 201, 7, 127, 2, 2, 201, 64, 3, 2, 2, 2, 202, 203,
	7, 93, 2, 2, 203, 66, 3, 2, 2, 2, 204, 205, 7, 95, 2, 2, 205, 68, 3, 2,
	2, 2, 206, 207, 7, 47, 2, 2, 207, 208, 7, 64, 2, 2, 208, 70, 3, 2, 2, 2,
	209, 210, 7, 104, 2, 2, 210, 211, 7, 110, 2, 2, 211, 212, 7, 113, 2, 2,
	212, 213, 7, 99, 2, 2, 213, 214, 7, 118, 2, 2, 214, 72, 3, 2, 2, 2, 215,
	216, 7, 117, 2, 2, 216, 217, 7, 118, 2, 2, 217, 218, 7, 116, 2, 2, 218,
	219, 7, 107, 2, 2, 219, 220, 7, 112, 2, 2, 220, 221, 7, 105, 2, 2, 221,
	74, 3, 2, 2, 2, 222, 223, 7, 100, 2, 2, 223, 224, 7, 113, 2, 2, 224, 225,
	7, 113, 2, 2, 225, 226, 7, 110, 2, 2, 226, 76, 3, 2, 2, 2, 227, 228, 7,
	112, 2, 2, 228, 229, 7, 119, 2, 2, 229, 230, 7, 110, 2, 2, 230, 231, 7,
	110, 2, 2, 231, 78, 3, 2, 2, 2, 232, 233, 7, 101, 2, 2, 233, 234, 7, 106,
	2, 2, 234, 235, 7, 99, 2, 2, 235, 236, 7, 116, 2, 2, 236, 80, 3, 2, 2,
	2, 237, 239, 5, 3, 2, 2, 238, 237, 3, 2, 2, 2, 239, 240, 3, 2, 2, 2, 240,
	238, 3, 2, 2, 2, 240, 241, 3, 2, 2, 2, 241, 246, 3, 2, 2, 2, 242, 243,
	7, 107, 2, 2, 243, 244, 7, 112, 2, 2, 244, 246, 7, 118, 2, 2, 245, 238,
	3, 2, 2, 2, 245, 242, 3, 2, 2, 2, 246, 82, 3, 2, 2, 2, 7, 2, 89, 109, 240,
	245, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "'var'", "", "'display'", "'return'", "'if'", "'else'", "'elif'",
	"'for'", "'true'", "'false'", "'func'", "'class'", "'let'", "':'", "'='",
	"'+'", "'-'", "'*'", "'/'", "'<'", "'>'", "'!='", "'!'", "','", "';'",
	"'('", "')'", "'{'", "'}'", "'['", "']'", "'->'", "'float'", "'string'",
	"'bool'", "'null'", "'char'",
}

var lexerSymbolicNames = []string{
	"", "COMMENT", "VAR", "CONST", "DISPLAY", "RETURN", "IF", "ELSE", "ELIF",
	"FOR", "TRUE", "FALSE", "FUNC", "CLASS", "LET", "ASSIGN", "EQUALS", "PLUS",
	"MINUS", "MULTIPLY", "DIVIDE", "LESSTHAN", "GREATERTHAN", "NOTEQUAL", "BANG",
	"COMMA", "SEMICOLON", "LBRACKET", "RBRACKET", "LBRACE", "RBRACE", "LSQRBRACKET",
	"RSQRBRACKET", "ARROW", "FLOAT", "STRING", "BOOLEAN", "NULL", "CHAR", "INT",
}

var lexerRuleNames = []string{
	"DIGIT", "COMMENT", "VAR", "CONST", "DISPLAY", "RETURN", "IF", "ELSE",
	"ELIF", "FOR", "TRUE", "FALSE", "FUNC", "CLASS", "LET", "ASSIGN", "EQUALS",
	"PLUS", "MINUS", "MULTIPLY", "DIVIDE", "LESSTHAN", "GREATERTHAN", "NOTEQUAL",
	"BANG", "COMMA", "SEMICOLON", "LBRACKET", "RBRACKET", "LBRACE", "RBRACE",
	"LSQRBRACKET", "RSQRBRACKET", "ARROW", "FLOAT", "STRING", "BOOLEAN", "NULL",
	"CHAR", "INT",
}

type JingleLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewJingleLexer(input antlr.CharStream) *JingleLexer {

	l := new(JingleLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "JingleLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// JingleLexer tokens.
const (
	JingleLexerCOMMENT     = 1
	JingleLexerVAR         = 2
	JingleLexerCONST       = 3
	JingleLexerDISPLAY     = 4
	JingleLexerRETURN      = 5
	JingleLexerIF          = 6
	JingleLexerELSE        = 7
	JingleLexerELIF        = 8
	JingleLexerFOR         = 9
	JingleLexerTRUE        = 10
	JingleLexerFALSE       = 11
	JingleLexerFUNC        = 12
	JingleLexerCLASS       = 13
	JingleLexerLET         = 14
	JingleLexerASSIGN      = 15
	JingleLexerEQUALS      = 16
	JingleLexerPLUS        = 17
	JingleLexerMINUS       = 18
	JingleLexerMULTIPLY    = 19
	JingleLexerDIVIDE      = 20
	JingleLexerLESSTHAN    = 21
	JingleLexerGREATERTHAN = 22
	JingleLexerNOTEQUAL    = 23
	JingleLexerBANG        = 24
	JingleLexerCOMMA       = 25
	JingleLexerSEMICOLON   = 26
	JingleLexerLBRACKET    = 27
	JingleLexerRBRACKET    = 28
	JingleLexerLBRACE      = 29
	JingleLexerRBRACE      = 30
	JingleLexerLSQRBRACKET = 31
	JingleLexerRSQRBRACKET = 32
	JingleLexerARROW       = 33
	JingleLexerFLOAT       = 34
	JingleLexerSTRING      = 35
	JingleLexerBOOLEAN     = 36
	JingleLexerNULL        = 37
	JingleLexerCHAR        = 38
	JingleLexerINT         = 39
)
