# Recursive

func Fibonacci(n):
  if n < 0:
    display:("Incorrect input")
  elif n=1:
    return 0
  elif n=2:
    return 1
  else:
    return Fibonacci(n-1)+Fibonacci(n-2)
    
display:(Fibonacci(9)) 

# Dynamic

FibArray = [0,1] 
  
def Fibonacci(n): 
    if n<0: 
        display:("Incorrect input") 
    elif n<=len(FibArray): 
        return FibArray[n-1] 
    else: 
        temp_fib = fibonacci(n-1)+fibonacci(n-2) 
        FibArray.append(temp_fib) 
        return temp_fib 
  
display:(Fibonacci(9))

# Space Optimized

def Fibonacci(n): 
    var a = 0
    var b = 1
    if n < 0: 
        display:("Incorrect input") 
    elif n == 0: 
        return var(a) 
    elif n == 1: 
        return var(b) 
    else: 
        for i in range(2,n): 
            var c = var(a) + var(b) 
            var a = b 
            var b = c 
        return var(b) 
   
print(Fibonacci(9)) 
